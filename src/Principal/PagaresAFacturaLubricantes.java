/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Principal;

import static Principal.prepagoGasolina.tablaArticulo;
import conexion.ConnectionTableDB;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.net.MalformedURLException;
import java.rmi.Naming;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import javax.swing.table.TableModel;
import sockets.metodosServidor;

/**
 *
 * @author usuario
 */
public class PagaresAFacturaLubricantes extends javax.swing.JFrame {
  public ConnectionTableDB modelClientes,model2;
String usu,contra,ip;
String codCliente,nom;
    double total;
int checkini=0;
int checkfin=0;
int checks=0;
   
/**
     * Creates new form PagaresAFacturaLubricantes
     */
    public PagaresAFacturaLubricantes(String usuario,String contrasena) {
        initComponents();
        cliente.setVisible(false);
        usu=usuario;
        contra=contrasena;
        
        
        
        
        try {
            modelClientes = new ConnectionTableDB(usu, contra, "adv_facturacion","SELECT cliente.idcliente,nombre,cedula_ruc,tipo_identificacion,direccion,telefono FROM cliente,credito_cliente\n" +
"where cliente_idcliente=idcliente;", false);
            tablaClientes.setModel(modelClientes);
        
        } catch (SQLException ex) {
            Logger.getLogger(PagaresAFacturaLubricantes.class.getName()).log(Level.SEVERE, null, ex);
        }
        cliente.setSize(1000, 500);

        File archivo = null;
        FileReader fr = null;
        BufferedReader br = null;        
        
        
               try {
            // Apertura del fichero y creacion de BufferedReader para poder
            // hacer una lectura comoda (disponer del metodo readLine()).
            archivo = new File("servidores.adv");
            fr = new FileReader(archivo);
            br = new BufferedReader(fr);

            // Lectura del fichero
            String linea, linea1 = "", linea2 = "";
            int i = 0;
            while ((linea = br.readLine()) != null) {
                if (i == 1) {
                    linea1 = linea;
                }
                if (i == 2) {
                    linea2 = linea;
                }
                i++;
            }
            String[] ips = new String[1];
            ips = linea1.split(":");
            String[] ipsa = new String[1];
            ipsa = linea2.split(":");

            ip = ipsa[1];
            //aqui esta la ip del servidor sacada del archivo
            ip = ips[1];
            //System.out.println(ipservidor);

        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            // En el finally cerramos el fichero, para asegurarnos
            // que se cierra tanto si todo va bien como si salta 
            // una excepcion.
            try {
                if (null != fr) {
                    fr.close();
                }
            } catch (Exception e2) {
                e2.printStackTrace();
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cliente = new javax.swing.JFrame();
        jLabel6 = new javax.swing.JLabel();
        cedula = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        tablaClientes = new javax.swing.JTable();
        lblnombre = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        btnBuscarCliente = new javax.swing.JButton();
        btnFacturas = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        txtCliente = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        dcInicial = new com.toedter.calendar.JDateChooser();
        dcFinal = new com.toedter.calendar.JDateChooser();
        jSeparator2 = new javax.swing.JSeparator();
        jButton2 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        txtALog = new javax.swing.JTextArea();
        jScrollPane5 = new javax.swing.JScrollPane();
        tablaResultado = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        areaDetalle = new javax.swing.JTextArea();
        jLabel7 = new javax.swing.JLabel();
        lblDetalle = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        lblTotal = new javax.swing.JLabel();
        btnNotaCredito = new javax.swing.JButton();

        cliente.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        cliente.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                clienteWindowClosed(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                clienteWindowClosing(evt);
            }
        });
        cliente.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel6.setText("CEDULA/RUC");
        cliente.getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 30, -1, -1));

        cedula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cedulaActionPerformed(evt);
            }
        });
        cedula.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cedulaKeyPressed(evt);
            }
        });
        cliente.getContentPane().add(cedula, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 30, 130, -1));

        tablaClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tablaClientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaClientesMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tablaClientes);

        cliente.getContentPane().add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, 930, 230));

        lblnombre.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblnombre.setText("Seleccionado");
        cliente.getContentPane().add(lblnombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(382, 30, 450, -1));

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/ico_ok.jpg"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        cliente.getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 20, 40, 40));

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Pagares Lubricantes");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        btnBuscarCliente.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnBuscarCliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/minilupa.png"))); // NOI18N
        btnBuscarCliente.setText("Buscar Cliente de Cr√©dito");
        btnBuscarCliente.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, java.awt.Color.gray, null, null));
        btnBuscarCliente.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        btnBuscarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarClienteActionPerformed(evt);
            }
        });

        btnFacturas.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnFacturas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/minilupa.png"))); // NOI18N
        btnFacturas.setText("Buscar Pagares");
        btnFacturas.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, java.awt.Color.gray, null, null));
        btnFacturas.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        btnFacturas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFacturasActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Id:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Cliente:");

        txtId.setEditable(false);
        txtId.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        txtCliente.setEditable(false);
        txtCliente.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Fecha Inicial:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Fecha Final:");

        jButton2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/nueva_consulta.jpg"))); // NOI18N
        jButton2.setToolTipText("Nueva Consulta");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtId)
                                    .addComponent(txtCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(btnBuscarCliente))
                        .addGap(234, 234, 234)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnFacturas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(dcInicial, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(dcFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBuscarCliente))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel4)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLabel5))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(dcInicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(dcFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(12, 12, 12)
                        .addComponent(btnFacturas)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jScrollPane4.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        txtALog.setColumns(20);
        txtALog.setRows(5);
        txtALog.setEnabled(false);
        txtALog.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtALogKeyPressed(evt);
            }
        });
        jScrollPane4.setViewportView(txtALog);

        tablaResultado.setAutoCreateRowSorter(true);
        tablaResultado.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "SELECCION", "NUMERO", "FECHA", "TOTAL"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaResultado.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        tablaResultado.setGridColor(new java.awt.Color(255, 255, 255));
        tablaResultado.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaResultadoMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                tablaResultadoMouseEntered(evt);
            }
        });
        jScrollPane5.setViewportView(tablaResultado);

        areaDetalle.setEditable(false);
        areaDetalle.setColumns(20);
        areaDetalle.setRows(5);
        jScrollPane1.setViewportView(areaDetalle);

        jLabel7.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel7.setText("Pagares");

        lblDetalle.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblDetalle.setText("Detalle");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("TOTAL:");

        lblTotal.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        btnNotaCredito.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnNotaCredito.setText("Crear Factura");
        btnNotaCredito.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNotaCreditoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(165, 165, 165))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 560, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel7)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(lblTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblDetalle)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 806, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(329, 329, 329)
                        .addComponent(btnNotaCredito))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 806, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(359, 359, 359)
                        .addComponent(lblTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(lblDetalle))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel8)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnNotaCredito)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 194, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 388, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBuscarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarClienteActionPerformed
cliente.setVisible(true);

 
 // TODO add your handling code here:

    }//GEN-LAST:event_btnBuscarClienteActionPerformed

    private void btnFacturasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFacturasActionPerformed
        DefaultTableModel Tabla = (DefaultTableModel) tablaResultado.getModel();

  //JOptionPane.showMessageDialog(this, inicial+"  "+ffinal);

 try{
             String formato = dcInicial.getDateFormatString();
Date dateI = dcInicial.getDate();
SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
 String inicial=sdf.format(dateI);
 formato=dcFinal.getDateFormatString();
 Date dateF=dcFinal.getDate();
 String ffinal=sdf.format(dateF);
 String paga="";
        if(txtId.getText().equals("")){
     JOptionPane.showMessageDialog(this, "Debe ingresar un cliente");
     }else{         
        try {
        model2 = new ConnectionTableDB(usu, contra, "adv_facturacion","SELECT idpagare_lubricantes,fecha,total\n" +
"FROM pagare_lubricantes,cliente\n" +
"where pagare_lubricantes.cliente_idcliente=cliente.idcliente and pagare_lubricantes.estado=0\n" +
"and cliente.cedula_ruc='"+txtId.getText()+"' and fecha between '"+inicial+"' and '"+ffinal+"'",false);
        if(model2.getRowCount()==0){
        JOptionPane.showMessageDialog(this, "no hay pagar√©s registrados");
        }else{
        double total=0;
        for (int i=0;i<model2.getRowCount();i++){
        
         System.out.println(paga+"="+model2.getValueAt(i, 1).toString());
        Tabla.addRow(new Object[]{true,model2.getValueAt(i, 0).toString(),model2.getValueAt(i, 1).toString(),model2.getValueAt(i, 2).toString()});
            
       total=total+Double.parseDouble(String.valueOf(model2.getValueAt(i, 2)));

        paga=model2.getValueAt(i, 0).toString();
        
        }
        checks=tablaResultado.getRowCount();
        model2.desconectar();
        lblTotal.setText(""+total);
        System.out.println("total "+lblTotal.getText());
        checkini=0;
        checkfin=tablaResultado.getRowCount();
                        btnFacturas.setEnabled(false);

        }
        } catch (SQLException ex) {
          Logger.getLogger(PagaresAFacturaLubricantes.class.getName()).log(Level.SEVERE, null, ex);
      }

     }
        
 }catch (Exception e){
 JOptionPane.showMessageDialog(null, "debe escoger las fechas ", "Error..!!", JOptionPane.ERROR_MESSAGE);

 }
    }//GEN-LAST:event_btnFacturasActionPerformed

    private void txtALogKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtALogKeyPressed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_txtALogKeyPressed

    private void btnNotaCreditoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNotaCreditoActionPerformed
System.out.println(checkini+" "+checkfin);
        
        if(tablaResultado.getRowCount()!=0 & checks!=0){
        String sec1="";
        String sec2="";
        String nuevo1="";
        int idc=0;
        String metodo="";
        int idu=0;
        total=Double.parseDouble(lblTotal.getText());
        double iv=total/1.12;
        double subtot=total-iv;
        try {
                        model2 = new ConnectionTableDB(usu, contra, "adv_facturacion","", false);
                        metodosServidor estado;
                        txtALog.append("conectando con el servidor\n");
                        estado = (metodosServidor) Naming.lookup("rmi://" + ip + "/servidor");
                        int s2=3;
                        try {
                        model2.consulta("SELECT secuencia1_factura FROM datos_gasolinera ");
                        sec1 = String.valueOf(model2.getValueAt(0, 0));
                        
                        model2.consulta("select s2 from punto_emision where idpunto_emision="+s2);
                        sec2=String.valueOf(model2.getValueAt(0, 0));
                        
                        model2.consulta("SELECT numero FROM factura where punto_emision_idpunto_emision=3 ORDER BY idfactura DESC LIMIT 1 ");
                        String nuevo[]=String.valueOf(model2.getValueAt(0, 0)).split("-");
                        nuevo1=String.valueOf(Integer.parseInt(nuevo[2])+1);
                        String cero="";
                        for (int i=nuevo1.length();i<9;i++){
                        cero=cero+"0";
                        }
                        nuevo1=cero+nuevo1;
                        txtALog.append("consultando datos de la factura \n");
                        model2.consulta("select idcliente from adv_facturacion.cliente where cedula_ruc='" + txtId.getText() + "'");
                        idc=Integer.parseInt(String.valueOf(model2.getValueAt(0, 0)));
                        txtALog.append("consultando datos del Cliente \n");
                        metodo="Contado";
                        
                        model2.consulta("SELECT idusuarios from usuarios where usuario='" + usu + "'");
                        txtALog.append("consultando datos del usuario \n");
                     idu = Integer.parseInt(String.valueOf(model2.getValueAt(0, 0)));
                      String consulta="SELECT cantidad,total,subtotal,iva,producto_idproducto,producto.punit,nombre FROM adv_facturacion.pagare_lubricantes_detalle,producto\n" +
                        "where pagare_lubricantes_detalle.producto_idproducto=producto.idproducto and\n" +
                        "(";
                     
                      txtALog.append("consultando productos \n");
                      String update="and (";
                        for (int i=0;i<tablaResultado.getRowCount();i++){
         
                            if(String.valueOf(tablaResultado.getValueAt(i, 0)).equalsIgnoreCase("True")){
                            consulta=consulta+" pagare_lubricantes_idpagare_lubricantes="+String.valueOf(tablaResultado.getValueAt(i, 1))+" ";
                            update=update+"idpagare_lubricantes="+String.valueOf(tablaResultado.getValueAt(i, 1));
  
                            if(i==tablaResultado.getRowCount()-1){
                            }else{
                                               if(i>=checkini & i<checkfin){
                                                   
                                                consulta=consulta+" OR ";
                                                update=update+" OR ";
                                                }
                            }
                            
                            
                            }
                        }
                     
                        
                        consulta=consulta+")";
                        update=update+")";
                        System.out.println(consulta);
                       int filas=model2.getRowCount();
                        model2.consulta(consulta);
                    Double[] cantidad = new Double[filas];
                    Double[] subt = new Double[filas];
                    Double[] tots = new Double[filas];
                    Double[] ivas1 = new Double[filas];
                    Double[] punit = new Double[filas];
                    String[] nomProd=new String[filas];
                    String[] detalled=new String[filas];

                    String[] idProd=new String[filas];
                       System.out.println("int ef = estado.factura("+s2+","+ sec1+","+ sec2+"," +nuevo1+","+ idc+","+ metodo+","+ idu+","+ subtot+","+ total+","+ iv);
                        for (int i=0;i<filas;i++){
                        cantidad[i]=Double.parseDouble(String.valueOf(model2.getValueAt(i, 0)));
                        tots[i]=Double.parseDouble(String.valueOf(model2.getValueAt(i, 1)));
                        subt[i]=Double.parseDouble(String.valueOf(model2.getValueAt(i, 2)));
                        ivas1[i]=Double.parseDouble(String.valueOf(model2.getValueAt(i, 3)));
                        idProd[i]=(String.valueOf(model2.getValueAt(i, 4)));
                        punit[i]=Double.parseDouble(String.valueOf(model2.getValueAt(i, 5)));
                        nomProd[i]=String.valueOf(model2.getValueAt(i, 6));
                        detalled[i]="";
                        
                        
                        }
                        txtALog.append("esperando respuesta del servidor");
                        int ef = estado.factura(s2, sec1, sec2, nuevo1, idc, metodo, idu, subtot, total, iv, cantidad, subt, tots, ivas1, idProd, contra, usu, punit, nomProd, detalled);
                        txtALog.append("conexion exitosa \n");
                       
                        if (ef == 1) {

                           System.out.println(detalled[0]);


                            
                        model2.consulta("select idfactura from factura where numero='"+(sec1+"-"+sec2+"-"+nuevo1+"'"));
                        int idFactura=Integer.parseInt(String.valueOf(model2.getValueAt(0, 0)));
                        //System.out.println("id "+idFactura+" numero "+(sec1+"-"+sec2+"-"+nuevo1));
                    
                        model2.ejecutar("update pagare_lubricantes set estado=1,factura_idfactura="+idFactura+" where estado=0 " +update );
                        System.out.println("update pagare_lubricantes set estado=1,factura_idfactura="+idFactura+" where estado=0 " +update );
                        txtALog.append("updates realizados");
                        JOptionPane.showMessageDialog(null, "Factura Numero" + nuevo1 + " Creada Correctamente");

                            this.dispose();

                        } else {

                            JOptionPane.showMessageDialog(null, "Hubo un error en la creacion de la factura");

                        }

                     model2.desconectar();
                    } catch (SQLException ex) {
                        Logger.getLogger(prepagoGasolina.class.getName()).log(Level.SEVERE, null, ex);
                    }
               
                    } catch (RemoteException ex) {
                        Logger.getLogger(VisualizarFactura.class.getName()).log(Level.SEVERE, null, ex);
                    txtALog.append("conexion fallida");
                    } catch (NotBoundException ex) {
                        Logger.getLogger(VisualizarFactura.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (MalformedURLException ex) {
                        Logger.getLogger(VisualizarFactura.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (SQLException ex) {
                        txtALog.append("error con la base de datos");
          Logger.getLogger(PagaresAFacturaLubricantes.class.getName()).log(Level.SEVERE, null, ex);
      }        // TODO add your handling code here:
        }else{
         JOptionPane.showMessageDialog(null, "no hay pagares seleccionados ", "Error..!!", JOptionPane.ERROR_MESSAGE);

        }
    }//GEN-LAST:event_btnNotaCreditoActionPerformed

    private void cedulaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cedulaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cedulaActionPerformed

    private void cedulaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cedulaKeyPressed
if(cedula.getText().length()>=2){
    try {
        modelClientes.consulta("SELECT cliente.idcliente,nombre,cedula_ruc,tipo_identificacion,direccion,telefono FROM cliente,credito_cliente\n" +
                "where cliente_idcliente=idcliente and cedula_ruc like '"+cedula.getText()+"%';");
    } catch (SQLException ex) {
        Logger.getLogger(PagaresAFacturaLubricantes.class.getName()).log(Level.SEVERE, null, ex);
    }
}else{
       
    try {
        modelClientes.consulta("SELECT cliente.idcliente,nombre,cedula_ruc,tipo_identificacion,direccion,telefono FROM cliente,credito_cliente\n" +
"where cliente_idcliente=idcliente;");
    } catch (SQLException ex) {
        Logger.getLogger(PagaresAFacturaLubricantes.class.getName()).log(Level.SEVERE, null, ex);
    }
    
    
}        // TODO add your handling code here:
    }//GEN-LAST:event_cedulaKeyPressed

    private void tablaClientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaClientesMouseClicked
int fila=tablaClientes.getSelectedRow();
String nombre=tablaClientes.getValueAt(fila, 1).toString();
cedula.setText(tablaClientes.getValueAt(fila, 2).toString());
lblnombre.setText(nombre);// TODO add your handling code here:
    }//GEN-LAST:event_tablaClientesMouseClicked

    private void clienteWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_clienteWindowClosing
       // TODO add your handling code here:
    }//GEN-LAST:event_clienteWindowClosing
public void limpiarTabla(JTable tabla) {
    //me borra todo lo que esta en la tabla para la nueva escritura
    DefaultTableModel TablaC = (DefaultTableModel) tabla.getModel();
    TableColumn column = null;
    for (int i = 0; i < tabla.getRowCount(); i++) {
        TablaC.removeRow(i);
        i -= 1;
    }

    for (int i = 0; i < 2; i++) {
        column = tabla.getColumnModel().getColumn(i);
        if (i == 0 || i == 3) {
            column.setPreferredWidth(230);
        } else {
            column.setPreferredWidth(100);
        }
    }

}
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int fila=tablaClientes.getSelectedRow();

        codCliente=tablaClientes.getValueAt(fila, 2).toString();
        nom=tablaClientes.getValueAt(fila, 1).toString();
        if(!codCliente.equals("")|| !nom.equals("")){
        txtCliente.setText(nom);
        txtId.setText(codCliente);
        limpiarTabla(tablaResultado);
        btnFacturas.setEnabled(true);
        cliente.dispose(); 
        }else{
        JOptionPane.showMessageDialog(cliente, "debe escoger algun registro");
        }
   // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void clienteWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_clienteWindowClosed
        // TODO add your handling code here:
    }//GEN-LAST:event_clienteWindowClosed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
if(modelClientes.connected){
    modelClientes.desconectar();
}// TODO add your handling code here:
    }//GEN-LAST:event_formWindowClosed

    private void tablaResultadoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaResultadoMouseClicked
      int fila=tablaResultado.getSelectedRow();
      String seleccion=tablaResultado.getValueAt(fila, 1).toString();
        String detalle="CANTIDAD \t NOMBRE \t P.UNITARIO \n \n";
        checks=0;
        try {
        model2 = new ConnectionTableDB(usu, contra, "adv_facturacion","SELECT cantidad,producto.punit,producto.nombre\n" +
"FROM pagare_lubricantes,pagare_lubricantes_detalle,producto\n" +
"where idpagare_lubricantes=pagare_lubricantes_idpagare_lubricantes\n" +
"and producto_idproducto=producto.idproducto\n" +
"and pagare_lubricantes.idpagare_lubricantes="+seleccion,false);
        
        for(int i=0;i<model2.getRowCount();i++){
        detalle=detalle + model2.getValueAt(i, 0).toString()+"\t"+ model2.getValueAt(i, 2).toString()+"\t"+ model2.getValueAt(i, 1).toString()+"\n";
        }
        areaDetalle.setText(detalle);       
        
          model2.desconectar();
          double total=0;
          int cont=0;
                         for (int i=0;i<tablaResultado.getRowCount();i++){
         
                            if(String.valueOf(tablaResultado.getValueAt(i, 0)).equalsIgnoreCase("True")){
                              if(cont==0){
                              checkini=i;
                              checkfin=i;
                              }else{
                              checkfin=i;
                              }
                                total=total+Double.parseDouble(String.valueOf(tablaResultado.getValueAt(i, 3)));
                                  cont++; 
                                  checks++;
                            }
                        }
          
          lblTotal.setText(total+"");
        } catch (SQLException ex) {
          Logger.getLogger(PagaresAFacturaLubricantes.class.getName()).log(Level.SEVERE, null, ex);
      }        // TODO add your handling code here:
    }//GEN-LAST:event_tablaResultadoMouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
limpiarTabla(tablaResultado);
lblTotal.setText("");
btnFacturas.setEnabled(true);
// TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void tablaResultadoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaResultadoMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_tablaResultadoMouseEntered

    /**
     * @param args the command line arguments
     */
 

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea areaDetalle;
    private javax.swing.JButton btnBuscarCliente;
    private javax.swing.JButton btnFacturas;
    private javax.swing.JButton btnNotaCredito;
    private javax.swing.JTextField cedula;
    private javax.swing.JFrame cliente;
    private com.toedter.calendar.JDateChooser dcFinal;
    private com.toedter.calendar.JDateChooser dcInicial;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JLabel lblDetalle;
    private javax.swing.JLabel lblTotal;
    private javax.swing.JLabel lblnombre;
    private javax.swing.JTable tablaClientes;
    private javax.swing.JTable tablaResultado;
    private javax.swing.JTextArea txtALog;
    public static javax.swing.JTextField txtCliente;
    public static javax.swing.JTextField txtId;
    // End of variables declaration//GEN-END:variables
}
