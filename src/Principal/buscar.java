package Principal;

import conexion.ConnectionTableDB;
import conexion.conexion_facturacion;
import java.awt.Dimension;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JCheckBox;
import javax.swing.JDesktopPane;
import javax.swing.JOptionPane;
import javax.swing.SwingWorker;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author r
 */
public class buscar extends javax.swing.JFrame {

    String usuario, contra;
    conexion_facturacion conectar;
    JDesktopPane panel;
    private ConnectionTableDB model;
    ImageIcon cargando = new ImageIcon("132.gif");
    private JCheckBox[] chkboxListProductos,chkboxListp;
    private final String DB = "adv_facturacion";

    /**
     * Creates new form buscar
     */
    public buscar(JDesktopPane panel, String usuario, String contra) {


        String consulta = "";
        try {

            model = new ConnectionTableDB(usuario, contra, DB, consulta, false);

        } catch (SQLException ex) {
            Logger.getLogger(buscar.class.getName()).log(Level.SEVERE, null, ex);
        }
     
        this.panel = panel;
        this.contra = contra;
        this.usuario = usuario;
        initComponents();
           
        hf.setValue(23);
           
        mf.setValue(59);
        
        
           
        sf.setValue(59);
        fechai.setDate(new Date());
        fechaf.setDate(new Date());







    }

    public buscar() {
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        fechai = new com.toedter.calendar.JDateChooser();
        jLabel2 = new javax.swing.JLabel();
        fechaf = new com.toedter.calendar.JDateChooser();
        jLabel3 = new javax.swing.JLabel();
        td = new javax.swing.JComboBox();
        estados = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        buscar = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        hi = new com.toedter.components.JSpinField();
        mi = new com.toedter.components.JSpinField();
        si = new com.toedter.components.JSpinField();
        hf = new com.toedter.components.JSpinField();
        mf = new com.toedter.components.JSpinField();
        sf = new com.toedter.components.JSpinField();
        gif = new javax.swing.JLabel();
        puntos = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Buscar");
        setAlwaysOnTop(true);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(new java.awt.GridLayout(2, 2, 0, 5));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("Fecha Inicial");
        jPanel2.add(jLabel1);
        jPanel2.add(fechai);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Fecha Final");
        jPanel2.add(jLabel2);
        jPanel2.add(fechaf);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("Tipo de Documento ");

        td.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Factura", "Nota de Credito", "Pagare", "Despacho" }));
        td.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tdActionPerformed(evt);
            }
        });

        estados.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        estados.setBackground(new java.awt.Color(255, 255, 255));
        estados.setLayout(new java.awt.GridLayout(1, 0));
        initListProductos();

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("Punto Emision");

        buscar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        buscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/editar-buscar-icono-5523-32.png"))); // NOI18N
        buscar.setText("Buscar");
        buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setText("Hora Inicial");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setText("Hora Final");

        hi.setMaximum(24);
        hi.setMinimum(0);

        mi.setMaximum(60);
        mi.setMinimum(0);

        si.setMaximum(60);
        si.setMinimum(0);

        hf.setMaximum(24);
        hf.setMinimum(0);

        mf.setMaximum(60);
        mf.setMinimum(0);

        sf.setMaximum(60);
        sf.setMinimum(0);

        puntos.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        puntos.setBackground(new java.awt.Color(255, 255, 255));
        puntos.setLayout(new java.awt.GridLayout(1, 0));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(hi, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(mi, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(si, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(hf, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(mf, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(sf, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(287, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(estados, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(td, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(puntos, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37)
                        .addComponent(buscar)))
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(gif, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(hi, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(mi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(si, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(15, 15, 15)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(hf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(mf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(sf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(estados, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(td, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addComponent(jLabel4))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(puntos, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(gif, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buscar, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );

        jPanel1.add(estados);
        jPanel1.add(puntos);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tdActionPerformed

    private void initListProductos() {
        try {

            model.consulta("select Estado_factura from factura  where Estado_factura is not null and not Estado_factura=' ' group by Estado_factura");
            chkboxListProductos = new JCheckBox[model.getRowCount()];

            for (int i = 0; i < model.getRowCount(); i++) {
                if (String.valueOf(model.getValueAt(i, 0)).length() == 0) {
                } else {

                    System.out.println(i);
                    chkboxListProductos[i] = new JCheckBox(((String) model.getValueAt(i, 0)).toUpperCase());
                    estados.add(chkboxListProductos[i]);
                }
            }
            
            
            
         model.consulta("select s2 from punto_emision group by s2");
           chkboxListp= new JCheckBox[model.getRowCount()];
                    
                    
        for (int i = 0; i < model.getRowCount(); i++) {
            if (String.valueOf(model.getValueAt(i, 0)).length() == 0) {
            
            } else {

                System.out.println(model.getValueAt(i, 0));
                
               chkboxListp[i] = new JCheckBox(((String) model.getValueAt(i, 0)).toUpperCase());
               puntos.add(chkboxListp[i]);
            }
        }
            
            
        } catch (SQLException ex) {
            System.err.println(ex.getMessage());
        }
    }

    private void buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarActionPerformed

        buscar.setEnabled(false);

        Date fechaini = fechai.getDate();
        Date fechafi = fechaf.getDate();

        String fi = null, ff = null;

        SimpleDateFormat df = new SimpleDateFormat("yyy-MM-dd");

        String horai, horaf;

        String estado = "",punto = null;
        final Dimension dim = this.getToolkit().getScreenSize();
        int hin = hi.getValue();
        int min = mi.getValue();
        int sin = si.getValue();

        int hfn = hf.getValue();
        int mfn = mf.getValue();
        int sfn = sf.getValue();

        horai = hin + ":" + min + ":" + sin;
        horaf = hfn + ":" + mfn + ":" + sfn;

        try {
            int añoi = fechai.getCalendar().get(Calendar.YEAR);
            int mesi = fechai.getCalendar().get(Calendar.MONTH) + 1;
            int diai = fechai.getCalendar().get(Calendar.DAY_OF_MONTH);
            fi = añoi + "-" + mesi + "-" + diai;
        } catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(this, "Se debe ingresar una fecha de inicio");

        }

        System.out.println(df.format(fechaini));

        try {

            int añof = fechaf.getCalendar().get(Calendar.YEAR);
            int mesf = fechaf.getCalendar().get(Calendar.MONTH) + 1;
            int diaf = fechaf.getCalendar().get(Calendar.DAY_OF_MONTH);

            ff = añof + "-" + mesf + "-" + diaf;
        } catch (NullPointerException ex) {

            JOptionPane.showMessageDialog(this, "Se debe ingresar una fecha final");

        }

        int c = 0;
        for (int i = 0; i < chkboxListProductos.length; i++) {
            if (chkboxListProductos[i].isSelected()) {
                c++;
                if (c == 1) {
                    estado = "('" + chkboxListProductos[i].getText() + "'";

                } else {
                    estado = estado + ",'" + chkboxListProductos[i].getText() + "'";
                }
            }

        }

        if (estado.equalsIgnoreCase("")) {

            for (int i = 0; i < chkboxListProductos.length; i++) {

                if (i == 0) {
                    estado = "('" + chkboxListProductos[i].getText() + "'";

                } else {
                    estado = estado + ",'" + chkboxListProductos[i].getText() + "'";
                }
            }

        }
        
        estado =estado + ")";
        
        
        int a = 0;
        for (int i = 0; i < chkboxListp.length; i++) {
            if (chkboxListp[i].isSelected()) {
                a++;
                if (a == 1) {
                    punto = "('" + chkboxListp[i].getText() + "'";

                } else {
                    punto = punto + ",'" + chkboxListp[i].getText() + "'";
                }
            }

        }
        
      
        
        

        if (estado.equalsIgnoreCase("")) {

            for (int i = 0; i < chkboxListp.length; i++) {

                if (i == 0) {
                    estado = "('" + chkboxListp[i].getText() + "'";

                } else {
                    estado = estado + ",'" + chkboxListp[i].getText() + "'";
                }
            }

        }
        
        
        

        punto = punto + ")";









        System.out.println(estado);
        final Revisar_facturas evf1 = new Revisar_facturas(usuario, contra, df.format(fechaini), df.format(fechafi), String.valueOf(td.getSelectedItem()), estado, punto, horai, horaf);
        SwingWorker<String, Void> worker = new SwingWorker<String, Void>() {
            @Override
            protected String doInBackground() throws Exception {

                gif.setIcon(cargando);
                evf1.llenar();
                evf1.suma();

                evf1.pack();
                panel.removeAll();
                panel.add(evf1);
                evf1.setLocation(0, 0);
                evf1.setSize(dim.width - 10, dim.height - 200);
                evf1.setVisible(true);
                evf1.setResizable(false);
                evf1.setClosable(true);
                evf1.setUI(null);



// aplicacion.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

// aplicacion.setVisible(true);
                return null;

            }

            @Override
            protected void done() {
                //To change body of catch statement use File | Settings | File Templates.
                buscar.setEnabled(true);
                gif.setIcon(null);

                System.out.println("termino");

            }
        };



        worker.execute();


    }//GEN-LAST:event_buscarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(buscar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(buscar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(buscar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(buscar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new buscar("root","manager").setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buscar;
    private javax.swing.JPanel estados;
    private com.toedter.calendar.JDateChooser fechaf;
    private com.toedter.calendar.JDateChooser fechai;
    private javax.swing.JLabel gif;
    private com.toedter.components.JSpinField hf;
    private com.toedter.components.JSpinField hi;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private com.toedter.components.JSpinField mf;
    private com.toedter.components.JSpinField mi;
    private javax.swing.JPanel puntos;
    private com.toedter.components.JSpinField sf;
    private com.toedter.components.JSpinField si;
    private javax.swing.JComboBox td;
    // End of variables declaration//GEN-END:variables
}
