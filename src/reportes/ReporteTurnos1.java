/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package reportes;

import conexion.ConnectionTableDB;
import java.awt.Dimension;
import java.math.BigDecimal;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.HashMap;
import java.util.Locale;
import java.util.Map;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JCheckBox;
import javax.swing.JOptionPane;
import javax.swing.text.DefaultCaret;
import javax.swing.text.MaskFormatter;
import net.sf.jasperreports.engine.JRException;
//import net.sf.jasperreports.engine.JRExporter;
//import net.sf.jasperreports.engine.JRExporterParameter;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.data.JRTableModelDataSource;
//import net.sf.jasperreports.engine.export.JRPdfExporter;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Advantech Digital
 */
public class ReporteTurnos1 extends javax.swing.JFrame {

    private ConnectionTableDB model;
    double totalVolumen, totalVenta,
            extraV, extraT, superV, superT, dieselV, dieselT,
            efectivo, credito, tc, prepago;
     Dimension dim;

    /**
     * Creates new form ReporteTurnos
     */
    public ReporteTurnos1(String user, String password) {
        USUARIO = user;
        PASSWORD = password;
        try {
            String consulta = "SELECT nombre FROM producto";
            model = new ConnectionTableDB(USUARIO, PASSWORD, DB, consulta, false);
            initComponents();
           dim = this.getToolkit().getScreenSize();
            
             this.setSize(dim.width, dim.height - 40);
            model.consulta("SELECT nombre FROM usuarios WHERE usuario = '" + user + "'");
            lblUsuario.setText(((String) model.getValueAt(0, 0)).toUpperCase());
            fechaI.setCalendar(c);
            fechaF.setCalendar(c);
            model.consulta("SELECT fecha, DATE_FORMAT(hora,'%H:%i:%s') AS hora, usuarios.nombre AS nombre, surtidor, producto.nombre AS producto, metodo_pago, punit, cantidad, factura.total "
                    + "FROM factura, factura_detalle, usuarios, configuracion, producto "
                    + "WHERE factura_idfactura = idfactura AND configuracion_nmanguera = nmanguera "
                    + "AND factura.usuarios_idusuarios = idusuarios AND configuracion.producto_idproducto = idproducto "
                    + "AND idfactura = '0' ORDER BY fecha, hora");
        } catch (SQLException | IllegalStateException ex) {
            System.err.println(ex.getMessage());
            JOptionPane.showMessageDialog(null, "Error al conectarse con el servidor.");
            System.exit(0);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Turnos = new javax.swing.JFrame();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblTurnos = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        btnTurno = new javax.swing.JButton();
        MaskFormatter mask = null;
        try {
            mask = new MaskFormatter("##:##:##");
            mask.setPlaceholderCharacter('_');
        } catch (ParseException e) {
            System.err.println(e.getMessage());
        }
        ftxtHoraI = new javax.swing.JFormattedTextField(mask);
        ftxtHoraF = new javax.swing.JFormattedTextField(mask);
        jLabel22 = new javax.swing.JLabel();
        lblUsuario = new javax.swing.JLabel();
        fechaI = new com.toedter.calendar.JDateChooser();
        fechaF = new com.toedter.calendar.JDateChooser();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        lstProductos = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        lstScroll = new javax.swing.JScrollPane();
        lstSurtidores = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstVendedores = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        jLabel23 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        lstPago = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        btnConsultar = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        btnSalir = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblDatos = new javax.swing.JTable();
        jScrollPane5 = new javax.swing.JScrollPane();
        txtATotal = new javax.swing.JTextArea();

        Turnos.setTitle("Turnos Vendedores");
        Turnos.setName("frmTurnos"); // NOI18N
        Turnos.setUndecorated(true);
        Turnos.setSize(500, 300);

        jScrollPane2.setPreferredSize(new java.awt.Dimension(450, 200));

        tblTurnos.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        tblTurnos.setModel(model);
        tblTurnos.setRowHeight(25);
        tblTurnos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tblTurnosMousePressed(evt);
            }
        });
        tblTurnos.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                tblTurnosMouseMoved(evt);
            }
        });
        jScrollPane2.setViewportView(tblTurnos);

        Turnos.getContentPane().add(jScrollPane2, java.awt.BorderLayout.CENTER);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Reporte Despachos");
        setName("turnos"); // NOI18N

        jPanel1.setLayout(new java.awt.BorderLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Fecha");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Desde:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Hora");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("Hasta:");

        btnTurno.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnTurno.setText("Turnos");
        btnTurno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTurnoActionPerformed(evt);
            }
        });

        ftxtHoraI.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        ftxtHoraI.setValue(String.format("%tT", c));
        ftxtHoraI.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                ftxtHoraFocusLost(evt);
            }
        });

        ftxtHoraF.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        ftxtHoraF.setValue(String.format("%tT", c));
        ftxtHoraF.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                ftxtHoraFocusLost(evt);
            }
        });

        jLabel22.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel22.setText("USUARIO:");

        lblUsuario.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(fechaF, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 176, Short.MAX_VALUE)
                                        .addComponent(fechaI, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                                        .addComponent(ftxtHoraF))
                                    .addComponent(ftxtHoraI, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(btnTurno, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel22)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblUsuario)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(lblUsuario))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(ftxtHoraI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(9, 9, 9))
                            .addComponent(fechaI, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel2))
                .addGap(14, 14, 14)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4)
                            .addComponent(fechaF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(16, 16, 16)
                        .addComponent(btnTurno, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(ftxtHoraF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(21, 21, 21))
        );

        jPanel1.add(jPanel2, java.awt.BorderLayout.LINE_START);

        jPanel3.setPreferredSize(new java.awt.Dimension(700, 200));
        jPanel3.setLayout(new java.awt.GridLayout(1, 3, 10, 10));

        jPanel4.setLayout(new java.awt.BorderLayout());

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Productos");
        jPanel4.add(jLabel5, java.awt.BorderLayout.PAGE_START);

        lstProductos.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        lstProductos.setLayout(new java.awt.GridLayout(0, 1));
        initListProductos();
        jScrollPane3.setViewportView(lstProductos);

        jPanel4.add(jScrollPane3, java.awt.BorderLayout.CENTER);

        jPanel3.add(jPanel4);

        jPanel5.setLayout(new java.awt.BorderLayout());

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Surtidores");
        jPanel5.add(jLabel6, java.awt.BorderLayout.PAGE_START);

        lstScroll.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        lstSurtidores.setLayout(new java.awt.GridLayout(0, 1));
        initListSurtidores();
        lstScroll.setViewportView(lstSurtidores);

        jPanel5.add(lstScroll, java.awt.BorderLayout.CENTER);

        jPanel3.add(jPanel5);

        jPanel6.setLayout(new java.awt.BorderLayout());

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Vendedores");
        jPanel6.add(jLabel7, java.awt.BorderLayout.PAGE_START);

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        lstVendedores.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        lstVendedores.setLayout(new java.awt.GridLayout(0, 1));
        initListVendedores();
        jScrollPane1.setViewportView(lstVendedores);

        jPanel6.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jPanel3.add(jPanel6);

        jPanel11.setLayout(new java.awt.BorderLayout());

        jLabel23.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel23.setText("Tipo de Pago");
        jPanel11.add(jLabel23, java.awt.BorderLayout.PAGE_START);

        lstPago.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        lstPago.setLayout(new java.awt.GridLayout(0, 1));
        initListPago();
        jScrollPane6.setViewportView(lstPago);

        jPanel11.add(jScrollPane6, java.awt.BorderLayout.CENTER);

        jPanel3.add(jPanel11);

        jPanel1.add(jPanel3, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_START);

        jPanel7.setLayout(new java.awt.BorderLayout());

        jPanel8.setLayout(new java.awt.GridLayout(1, 8, 20, 0));

        btnConsultar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnConsultar.setText("Consultar");
        btnConsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultarActionPerformed(evt);
            }
        });
        jPanel8.add(btnConsultar);

        btnGuardar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnGuardar.setText("Guardar");
        btnGuardar.setEnabled(false);
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });
        jPanel8.add(btnGuardar);
        jPanel8.add(jLabel15);
        jPanel8.add(jLabel8);
        jPanel8.add(jLabel13);
        jPanel8.add(jLabel14);

        btnSalir.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnSalir.setText("Salir");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });
        jPanel8.add(btnSalir);

        jPanel7.add(jPanel8, java.awt.BorderLayout.PAGE_START);

        jPanel9.setLayout(new java.awt.BorderLayout());

        jPanel10.setLayout(new java.awt.GridLayout(1, 10));

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel9.setText("Fecha y ");
        jLabel9.setToolTipText("");
        jPanel10.add(jLabel9);

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel16.setText("Hora");
        jPanel10.add(jLabel16);

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel18.setText("Vendedor");
        jPanel10.add(jLabel18);

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("Surtidor");
        jPanel10.add(jLabel10);

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel17.setText("Manguera");
        jPanel10.add(jLabel17);

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("Producto");
        jPanel10.add(jLabel11);

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("Tipo de Pago");
        jPanel10.add(jLabel12);

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel19.setText("PPU");
        jPanel10.add(jLabel19);

        jLabel20.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel20.setText("Volumen");
        jPanel10.add(jLabel20);

        jLabel21.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel21.setText("Monto");
        jPanel10.add(jLabel21);

        jPanel9.add(jPanel10, java.awt.BorderLayout.PAGE_START);

        jScrollPane4.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        tblDatos.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        tblDatos.setModel(model);
        tblDatos.setShowHorizontalLines(false);
        tblDatos.setShowVerticalLines(false);
        tblDatos.getTableHeader().setVisible(false);
        jScrollPane4.setViewportView(tblDatos);

        jPanel9.add(jScrollPane4, java.awt.BorderLayout.CENTER);

        txtATotal.setEditable(false);
        txtATotal.setColumns(20);
        txtATotal.setFont(new java.awt.Font("Consolas", 1, 13)); // NOI18N
        txtATotal.setRows(5);
        jScrollPane5.setViewportView(txtATotal);

        jPanel9.add(jScrollPane5, java.awt.BorderLayout.PAGE_END);

        jPanel7.add(jPanel9, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel7, java.awt.BorderLayout.CENTER);

        setBounds(0, 0, 1216, 718);
    }// </editor-fold>//GEN-END:initComponents

    private void initListProductos() {
         try {
            model.consulta("SELECT nombre FROM producto");
            chkboxListProductos = new JCheckBox[model.getRowCount()];
            for (int i = 0; i < model.getRowCount(); i++) {
                chkboxListProductos[i] = new JCheckBox(((String) model.getValueAt(i, 0)).toUpperCase());
                lstProductos.add(chkboxListProductos[i]);
            }
        } catch (SQLException ex) {
            System.err.println(ex.getMessage());
        }
        
            
            
        
    }
      JCheckBox[] chkboxListPagos;
       private void initListPago() {
        
           
       chkboxListPagos = new JCheckBox[3];
      
                chkboxListPagos[0] = new JCheckBox("Contado");
                lstPago.add(chkboxListPagos[0]);
                 chkboxListPagos[1] = new JCheckBox("Credito");
                lstPago.add(chkboxListPagos[1]);
                chkboxListPagos[2] = new JCheckBox("Pagare");
                lstPago.add(chkboxListPagos[2]);
           
         
    }
    
    

    private void initListSurtidores() {
        try {
            model.consulta("SELECT surtidor FROM configuracion where surtidor <> 0 GROUP BY surtidor ");
            chkboxListSurtidores = new JCheckBox[model.getRowCount()];
            for (int i = 0; i < model.getRowCount(); i++) {
                chkboxListSurtidores[i] = new JCheckBox("Surtidor " + String.valueOf((Integer) model.getValueAt(i, 0)));
                lstSurtidores.add(chkboxListSurtidores[i]);
            }
        } catch (SQLException ex) {
            System.err.println(ex.getMessage());
        }
    }

    private void initListVendedores() {
        try {
            model.consulta("SELECT nombre FROM usuarios");
            chkboxList = new JCheckBox[model.getRowCount()];
            /*chkboxList[0] = new JCheckBox("Lunes");
             chkboxList[1] = new JCheckBox("Martes");
             chkboxList[2] = new JCheckBox("Miercoles");
             chkboxList[3] = new JCheckBox("Jueves");
             chkboxList[4] = new JCheckBox("Viernes");
             chkboxList[5] = new JCheckBox("Sabado");
             chkboxList[6] = new JCheckBox("Domingo");*/
            for (int i = 0; i < model.getRowCount(); i++) {
                chkboxList[i] = new JCheckBox((String) model.getValueAt(i, 0));
                lstVendedores.add(chkboxList[i]);
            }
        } catch (SQLException ex) {
            System.err.println(ex.getMessage());
        }
    }

    private void ftxtHoraFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ftxtHoraFocusLost
        // TODO add your handling code here:
        Object source = evt.getSource();
        Pattern pattern = Pattern.compile("([01]?[0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]");
        Matcher match;
        if (source == ftxtHoraI) {
            match = pattern.matcher(ftxtHoraI.getText());
            if (!match.matches()) {
                JOptionPane.showMessageDialog(this, "Formato de hora incorrecto");
                ftxtHoraI.setText("");
                ftxtHoraI.requestFocus();
            }
        } else if (source == ftxtHoraF) {
            match = pattern.matcher(ftxtHoraF.getText());
            if (!match.matches()) {
                JOptionPane.showMessageDialog(this, "Formato de hora incorrecto");
                ftxtHoraF.setText("");
                ftxtHoraF.requestFocus();
            }
        }
    }//GEN-LAST:event_ftxtHoraFocusLost

    private void btnConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultarActionPerformed

        pago="";
        
        int pagare=0;
        
        
        String consulta;
        
        
        // TODO add your handling code here:
        int count = 0;
        for (int i = 0; i < chkboxListProductos.length; i++) {
            if (chkboxListProductos[i].isSelected()) {
                ++count;
                if (count == 1) {
                    producto = "AND (producto.nombre = '" + chkboxListProductos[i].getText() + "' ";
                } else {
                    producto += "OR producto.nombre = '" + chkboxListProductos[i].getText() + "' ";
                }
            }
            if (count == 0) {
                producto = "";
            }
        }
        if (count > 0) {
            producto += ") ";
        }
        count = 0;
        for (int i = 0; i < chkboxListSurtidores.length; i++) {
            if (chkboxListSurtidores[i].isSelected()) {
                ++count;
                if (count == 1) {
                    surtidor = "AND (surtidor = " + (i + 1) + " ";
                } else {
                    surtidor += "OR surtidor = '" + (i + 1) + "' ";
                }
            }
            if (count == 0) {
                surtidor = "";
            }
        }
        if (count > 0) {
            surtidor += ") ";
        }
        count = 0;
        for (int i = 0; i < chkboxList.length; i++) {
            if (chkboxList[i].isSelected()) {
                ++count;
                if (count == 1) {
                    vendedor = "AND (usuarios.nombre = '" + chkboxList[i].getText() + "' ";
                } else {
                    vendedor += "OR usuarios.nombre = '" + chkboxList[i].getText() + "' ";
                }
            }
            if (count == 0) {
                vendedor = "";
            }
        }
        if (count > 0) {
            vendedor += ") ";
        }
        
        
         int count1 = 0;
         
        for (int i = 0; i < chkboxListPagos.length; i++) {
            if (chkboxListPagos[i].isSelected()) {
                
                
                ++count1;
                if (count1 == 1) {
                   
                    
                    pago = "AND (metodo_pago = '" + chkboxListPagos[i].getText() + "' ";
                } else {
                   pago+= "OR metodo_pago = '" + chkboxListPagos[i].getText() + "' ";
                }
                
                
                if(chkboxListPagos[i].getText().equalsIgnoreCase("Pagare")){
                
                
                  pagare=1;
                
                
                }
                
                
                
                
               
                
            }
             if (count1 == 0) {
                pago = "";
                pagare=1;
             
             }
            
            
        }
        
         if (count1 > 0) {
                    pago += ") ";
         }
        
        
        
        try {

            int añoi = fechaI.getCalendar().get(Calendar.YEAR);
            int mesi = fechaI.getCalendar().get(Calendar.MONTH) + 1;
            int diai = fechaI.getCalendar().get(Calendar.DAY_OF_MONTH);

            int añof = fechaF.getCalendar().get(Calendar.YEAR);
            int mesf = fechaF.getCalendar().get(Calendar.MONTH) + 1;
            int diaf = fechaF.getCalendar().get(Calendar.DAY_OF_MONTH);

            
            if(pagare==1){
            
           
              consulta="SELECT fecha, DATE_FORMAT(hora,'%H:%i:%s') AS hora, usuarios.nombre AS nombre, surtidor, configuracion_nmanguera, producto.nombre AS producto, metodo_pago, punit, cantidad, factura.total "
                    + "FROM factura, factura_detalle, usuarios, configuracion, producto "
                    + "WHERE factura_idfactura = idfactura AND configuracion_nmanguera = nmanguera "
                    + "AND factura.usuarios_idusuarios = idusuarios AND configuracion.producto_idproducto = idproducto "
                    + "AND CONCAT(fecha, \" \", hora) >= '"
                    + String.format("%tF", dateFormat.parse(diai+"/"+mesi+"/"+añoi)) + " "
                    + ftxtHoraI.getText() + "' "
                    + "AND CONCAT(fecha, \" \", hora) <= '"
                    + String.format("%tF", dateFormat.parse(diaf+"/"+mesf+"/"+añof)) + " "
                    + ftxtHoraF.getText() + "' "
                    + producto
                    + surtidor
                    + vendedor
                    + pago
                    + "union (SELECT fecha, DATE_FORMAT(hora,'%H:%i:%s') AS hora, usuarios.nombre AS nombre, surtidor, configuracion_nmanguera, producto.nombre AS producto,'Pagare', pagare.punit, cantidad, pagare.total "
                    + "FROM pagare, usuarios, configuracion, producto "
                    + "WHERE configuracion_nmanguera = nmanguera "
                    + "AND pagare.usuarios_idusuarios = idusuarios AND configuracion.producto_idproducto = idproducto "
                    + "AND CONCAT(fecha, \" \", hora) >= '"
                    + String.format("%tF", dateFormat.parse(diai+"/"+mesi+"/"+añoi)) + " "
                    + ftxtHoraI.getText() + "' "
                    + "AND CONCAT(fecha, \" \", hora) <= '"
                    + String.format("%tF", dateFormat.parse(diaf+"/"+mesf+"/"+añof)) + " "
                    + ftxtHoraF.getText() + "' "
                    + producto
                    + surtidor
                    + vendedor +")ORDER BY fecha, hora";
            
            }else{
            
            
            consulta="SELECT fecha, DATE_FORMAT(hora,'%H:%i:%s') AS hora, usuarios.nombre AS nombre, surtidor, configuracion_nmanguera, producto.nombre AS producto, metodo_pago, punit, cantidad, factura.total "
                    + "FROM factura, factura_detalle, usuarios, configuracion, producto "
                    + "WHERE factura_idfactura = idfactura AND configuracion_nmanguera = nmanguera "
                    + "AND factura.usuarios_idusuarios = idusuarios AND configuracion.producto_idproducto = idproducto "
                    + "AND CONCAT(fecha, \" \", hora) >= '"
                    + String.format("%tF", dateFormat.parse(diai+"/"+mesi+"/"+añoi)) + " "
                    + ftxtHoraI.getText() + "' "
                    + "AND CONCAT(fecha, \" \", hora) <= '"
                    + String.format("%tF", dateFormat.parse(diaf+"/"+mesf+"/"+añof)) + " "
                    + ftxtHoraF.getText() + "' "
                    + producto
                    + surtidor
                    + vendedor
                    + pago
                    + " ORDER BY fecha, hora";
            
            
            
            }
            model.consulta(consulta);
            totalVolumen = 0.000;
            totalVenta = 0.00;
            extraV = 0.000;
            extraT = 0.00;
            superV = 0.000;
            superT = 0.00;
            dieselV = 0.000;
            dieselT = 0.00;
            efectivo = 0.00;
            credito = 0.00;
            tc = 0.00;
            prepago = 0.00;
            for (int i = 0; i < model.getRowCount(); i++) {
                totalVolumen += ((BigDecimal) model.getValueAt(i, 8)).doubleValue();
                totalVenta += ((BigDecimal) model.getValueAt(i, 9)).doubleValue();
                if (((String) model.getValueAt(i, 5)).equalsIgnoreCase("extra")) {
                    extraV += ((BigDecimal) model.getValueAt(i, 8)).doubleValue();
                    extraT += ((BigDecimal) model.getValueAt(i, 9)).doubleValue();
                } else if (((String) model.getValueAt(i, 5)).equalsIgnoreCase("super")) {
                    superV += ((BigDecimal) model.getValueAt(i, 8)).doubleValue();
                    superT += ((BigDecimal) model.getValueAt(i, 9)).doubleValue();
                } else if (((String) model.getValueAt(i, 5)).equalsIgnoreCase("diesel")) {
                    dieselV += ((BigDecimal) model.getValueAt(i, 8)).doubleValue();
                    dieselT += ((BigDecimal) model.getValueAt(i, 9)).doubleValue();
                }
                if (((String) model.getValueAt(i, 6)).equalsIgnoreCase("contado")) {
                    efectivo += ((BigDecimal) model.getValueAt(i, 9)).doubleValue();
                } else if (((String) model.getValueAt(i, 6)).equalsIgnoreCase("credito")) {
                    credito += ((BigDecimal) model.getValueAt(i, 9)).doubleValue();
                } else if (((String) model.getValueAt(i, 6)).equalsIgnoreCase("tc")) {
                    tc += ((BigDecimal) model.getValueAt(i, 9)).doubleValue();
                } else if (((String) model.getValueAt(i, 6)).equalsIgnoreCase("prepago")) {
                    credito += ((BigDecimal) model.getValueAt(i, 9)).doubleValue();
                }
            }


            System.out.println("Total Venta " + totalVolumen + " " + totalVenta);

            txtATotal.setText(String.format("%141s%12.3f%15.2f\n\n", "TOTALES: ", totalVolumen, totalVenta));
            txtATotal.append(String.format("%141s%12.3f%15.2f\n", "Extra: ", extraV, extraT));
            txtATotal.append(String.format("%141s%12.3f%15.2f\n", "Super: ", superV, superT));
            txtATotal.append(String.format("%141s%12.3f%15.2f\n\n", "Diesel: ", dieselV, dieselT));
            txtATotal.append(String.format("%141s%2.2f\n", "Prepago: ", prepago));
            txtATotal.append(String.format("%141s%2.2f\n", "Efectivo: ", efectivo));
            txtATotal.append(String.format("%141s%2.2f\n", "T.C.: ", tc));
            txtATotal.append(String.format("%141s%2.2f\n", "Credito: ", credito));
            
        } catch (SQLException | ParseException ex) {
            System.out.println(ex.getMessage());
        }
        if (model.getRowCount() != 0) {
            btnGuardar.setEnabled(true);
        }
    }//GEN-LAST:event_btnConsultarActionPerformed

    private void btnTurnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTurnoActionPerformed
        // TODO add your handling code here:
        btnTurno.setEnabled(false);
        Turnos.setVisible(true);
        Turnos.requestFocus();
        setEnabled(false);
        try {
            model.consulta("SELECT idturnos Turno, DATE_FORMAT(horai, '%H:%i:%s') Ingreso, DATE_FORMAT(horas, '%H:%i:%s') Salida FROM turnos");
        } catch (SQLException ex) {
            System.err.println(ex.getMessage());
        }
    }//GEN-LAST:event_btnTurnoActionPerformed

    private void tblTurnosMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblTurnosMousePressed
        // TODO add your handling code here:
        row = tblTurnos.rowAtPoint(evt.getPoint());
        ftxtHoraI.setText((String) model.getValueAt(row, 1));
        ftxtHoraF.setText((String) model.getValueAt(row, 2));
        try {
            if (Integer.parseInt(((String) model.getValueAt(row, 1)).substring(0, 2)) > Integer.parseInt(((String) model.getValueAt(row, 2)).substring(0, 2))) {
               
            int añoi = fechaI.getCalendar().get(Calendar.YEAR);
            int mesi = fechaI.getCalendar().get(Calendar.MONTH) + 1;
            int diai = fechaI.getCalendar().get(Calendar.DAY_OF_MONTH);

            int añof = fechaF.getCalendar().get(Calendar.YEAR);
            int mesf = fechaF.getCalendar().get(Calendar.MONTH) + 1;
            int diaf = fechaF.getCalendar().get(Calendar.DAY_OF_MONTH);
                
                
                Date d = dateFormat.parse(diai+"/"+mesi+"/"+añoi);
                c.setTime(d);
                c.add(Calendar.DATE, 1);
                fechaF.setDate(d);
            } else {
                //fechaF.setDate(fechaI.getCalendar());
            }
        } catch (ParseException ex) {
            System.err.println(ex.getMessage());
        }
        setEnabled(true);
        btnConsultar.requestFocus();
        Turnos.setVisible(false);
        btnTurno.setEnabled(true);
        try {
            model.consulta("SELECT * FROM factura WHERE idfactura = '0'");
        } catch (SQLException ex) {
            System.err.println(ex.getMessage());
        }
    }//GEN-LAST:event_tblTurnosMousePressed

    private void tblTurnosMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblTurnosMouseMoved
        // TODO add your handling code here:
        int rowToSelect = tblTurnos.rowAtPoint(evt.getPoint());
        if (rowToSelect >= 0 && rowToSelect < tblTurnos.getRowCount()) {
            tblTurnos.setRowSelectionInterval(rowToSelect, rowToSelect);
        }
    }//GEN-LAST:event_tblTurnosMouseMoved

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        // TODO add your handling code here:
        this.dispose();

    }//GEN-LAST:event_btnSalirActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        // TODO add your handling code here:
        try {
            Map map = new HashMap();
            map.put("USUARIO", lblUsuario.getText());
            map.put("DEVELOPER", "Desarrollado por Advantech Digital");
            map.put("EXTRAV", String.format("%.3f", extraV));
            map.put("EXTRAT", String.format("%.2f", extraT));
            map.put("SUPERV", String.format("%.3f", superV));
            map.put("SUPERT", String.format("%.2f", superT));
            map.put("DIESELV", String.format("%.3f", dieselV));
            map.put("DIESELT", String.format("%.2f", dieselT));
            map.put("PREPAGO", String.format("%.2f", prepago));
            map.put("EFECTIVO", String.format("%.2f", efectivo));
            map.put("TC", String.format("%.2f", tc));
            map.put("CREDITO", String.format("%.2f", credito));
            JRTableModelDataSource jrModel = new JRTableModelDataSource(model);
            JasperReport jasper = JasperCompileManager.compileReport("reportes/ReporteTurnos.jrxml");
            JasperPrint jrPrint = JasperFillManager.fillReport(jasper, map, jrModel);
            /*JRExporter export = new JRPdfExporter();
             export.setParameter(JRExporterParameter.JASPER_PRINT, jrPrint);
             export.setParameter(JRExporterParameter.OUTPUT_FILE, new File(""));
             export.exportReport();*/
            JasperViewer.viewReport(jrPrint, false);
        } catch (JRException ex) {
            System.err.println(ex.getMessage());
        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Metal".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            System.out.println(ex.getMessage());
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                //new ReporteTurnos1("", "").setVisible(true);
            }
        });
    }
    private String USUARIO = "";
    private String PASSWORD = "";
    private final String DB = "adv_facturacion";
    private final SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy", Locale.ENGLISH);
    private Calendar c = Calendar.getInstance();
    private JCheckBox[] chkboxListProductos;
    private JCheckBox[] chkboxListSurtidores;
    private JCheckBox[] chkboxList;
    private String producto, surtidor, vendedor,pago;
    private int row = -1;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFrame Turnos;
    private javax.swing.JButton btnConsultar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnSalir;
    private javax.swing.JButton btnTurno;
    private com.toedter.calendar.JDateChooser fechaF;
    private com.toedter.calendar.JDateChooser fechaI;
    private javax.swing.JFormattedTextField ftxtHoraF;
    private javax.swing.JFormattedTextField ftxtHoraI;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JLabel lblUsuario;
    private javax.swing.JPanel lstPago;
    private javax.swing.JPanel lstProductos;
    private javax.swing.JScrollPane lstScroll;
    private javax.swing.JPanel lstSurtidores;
    private javax.swing.JPanel lstVendedores;
    private javax.swing.JTable tblDatos;
    private javax.swing.JTable tblTurnos;
    private javax.swing.JTextArea txtATotal;
    // End of variables declaration//GEN-END:variables
}
