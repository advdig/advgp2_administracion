/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package reportes;

import conexion.conexion_facturacion;
import java.awt.Dimension;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.Time;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Collections;
import java.util.Comparator;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.view.JasperViewer;
import reportes.Reporte_diario;
import reportes.Reporte_diario;

/**
 *
 * @author r
 */
public class Reporte_diario_consolidado extends javax.swing.JFrame {

    conexion_facturacion con;
    Dimension dim;

    /**
     * Creates new form Reporte_diario_consolidado
     */
    public Reporte_diario_consolidado(String usuario, String contraseña) {
        try {
            con = new conexion_facturacion(usuario, contraseña);
            con.conectar();
            initComponents();

            dim = this.getToolkit().getScreenSize();

            System.out.println(dim);

            // this.setSize(dim.width, dim.height - 40);

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Reporte_diario_consolidado.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        diai = new com.toedter.calendar.JDateChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        turnos = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Reporte Consolidado");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Dia Reporte");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, 90, -1));
        jPanel1.add(diai, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 30, 112, -1));

        turnos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Seleccionar", "Horai", "horaf", "Usuario", "Fecha Ingreso", "Fecha Final"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(turnos);
        turnos.getColumnModel().getColumn(0).setResizable(false);
        turnos.getColumnModel().getColumn(4).setResizable(false);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 91, 650, 275));

        jButton1.setText("Buscar Turnos");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 50, 170, -1));

        jButton2.setText("Ver Reporte");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 20, 170, -1));

        jButton3.setText("Ver Reporte Detallado");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 50, 170, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 893, 395));

        pack();
    }// </editor-fold>//GEN-END:initComponents
    Date fechain, fechafin;
    int i;
    SimpleDateFormat formato = new SimpleDateFormat("yyyy-MM-dd");

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {




            DefaultTableModel Tabla = (DefaultTableModel) turnos.getModel();

            Tabla.setNumRows(0);


            fechain = diai.getDate();


            String consulta = "select horai ,horas ,nombre,fecha_inicial,fecha_final \n"
                    + "from `usuarios` usuarios INNER JOIN `reportes_usuario` reportes_usuario ON usuarios.`idusuarios` = reportes_usuario.`usuarios_idusuarios`\n"
                    + "where \n"
                    + "(fecha_inicial between  DATE_sub('" + formato.format(fechain) + "',INTERVAL 1 DAY) and '" + formato.format(fechain) + "' ) \n"
                    + "and (fecha_final between  '" + formato.format(fechain) + "' and DATE_add('" + formato.format(fechain) + "',INTERVAL 1 DAY)) \n"
                    + "group by nombre,horai order by fecha_inicial,horai";





            System.out.println(consulta);


            Statement st_in = con.coneccion.createStatement();
            ResultSet consultan2 = st_in.executeQuery(consulta);


            while (consultan2.next()) {

                Tabla.addRow(new Object[]{false, consultan2.getString(1), consultan2.getString(2), consultan2.getString(3), consultan2.getString(4), consultan2.getString(5)});





            }


        } catch (SQLException ex) {
            Logger.getLogger(Reporte_diario_consolidado.class.getName()).log(Level.SEVERE, null, ex);
        }






    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {

            String hf = "", hi = "", diaf = "", diai = "";

            String hora = "";

            String condicion = "", usuarios = "";

            System.out.println(turnos.getModel().getRowCount());
            int a = 0;


            for (int i = 0; i < turnos.getModel().getRowCount(); i++) {




                System.out.println(Boolean.getBoolean(turnos.getModel().getValueAt(i, 0).toString()));

                if (turnos.getModel().getValueAt(i, 0).toString().equalsIgnoreCase("true")) {

                    if (a == 0) {

                        diai = turnos.getModel().getValueAt(i, 4).toString();
                        usuarios = "('" + turnos.getModel().getValueAt(i, 3).toString() + "'";
                        hi = turnos.getModel().getValueAt(i, 1).toString();
                        hora = "('" + turnos.getModel().getValueAt(i, 1).toString() + "'";


                    } else {

                        hora = hora + ",'" + turnos.getModel().getValueAt(i, 1).toString() + "'";
                        usuarios = usuarios + ",'" + turnos.getModel().getValueAt(i, 3).toString() + "'";

                    }
                    a++;


                    hf = turnos.getModel().getValueAt(i, 2).toString();
                    diaf = turnos.getModel().getValueAt(i, 5).toString();




                }





            }


            usuarios = usuarios + ")";
            hora = hora + ")";

            condicion = "(fecha_inicial between  '" + diai + "' and '" + diaf + "' ) and (fecha_final between  '" + diai + "' and '" + diaf + "') and usuarios.nombre in" + usuarios + " and horai in " + hora;

            System.out.println(condicion);
            System.out.println(turnos.getModel().getRowCount());

            con.conectar();
            Map parameters = new HashMap();
            parameters.put("condicion", condicion);
            parameters.put("diai", diai);
            parameters.put("diaf", diaf);
            parameters.put("horai", hi);
            parameters.put("horaf", hf);



            JasperReport report = JasperCompileManager.compileReport("Reporte_Consolidado.jrxml");
            JasperPrint print = JasperFillManager.fillReport(report, parameters, con.coneccion);
            // Exporta el informe a PDF
            //JasperExportManager.exportReportToPdfFile(print, "venta_combu.pdf");
            //Para visualizar el pdf directamente desde java
            JasperViewer.viewReport(print, false);

        } catch (JRException ex) {
            Logger.getLogger(Reporte_diario.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Reporte_diario.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        try {

            ArrayList horas = new ArrayList<String>();
            ArrayList horai = new ArrayList<String>();




            String hf = "", hi = "", diaf = "", diai = "";

            String hora = "";

            String condicion = "", usuarios = "", condicion1 = "", condicion2 = "", condicion3 = "", condicionf = "";

            System.out.println(turnos.getModel().getRowCount());
            int a = 0;


            for (int i = 0; i < turnos.getModel().getRowCount(); i++) {




                System.out.println(Boolean.getBoolean(turnos.getModel().getValueAt(i, 0).toString()));

                if (turnos.getModel().getValueAt(i, 0).toString().equalsIgnoreCase("true")) {


                    horas.add(turnos.getModel().getValueAt(i, 2).toString());
                    horai.add(turnos.getModel().getValueAt(i, 1).toString());

                    if (a == 0) {

                        diai = turnos.getModel().getValueAt(i, 4).toString();
                        usuarios = "('" + turnos.getModel().getValueAt(i, 3).toString() + "'";
                        hi = turnos.getModel().getValueAt(i, 1).toString();
                        hora = "('" + turnos.getModel().getValueAt(i, 1).toString() + "'";


                    } else {

                        hora = hora + ",'" + turnos.getModel().getValueAt(i, 1).toString() + "'";
                        usuarios = usuarios + ",'" + turnos.getModel().getValueAt(i, 3).toString() + "'";

                    }
                    a++;


                    hf = turnos.getModel().getValueAt(i, 2).toString();
                    diaf = turnos.getModel().getValueAt(i, 5).toString();




                }





            }



            Collections.sort(horas);

            Collections.sort(horai);


            hi = horai.get(0).toString();

            hf = horas.get(horas.size() - 1).toString();

            System.out.println("horai" + hi);



            SimpleDateFormat df1 = new SimpleDateFormat("HH:mm:ss");


            usuarios = usuarios + ")";
            hora = hora + ")";

            String horafa, horap;


            Calendar calendar = Calendar.getInstance();


            Date h1, h2;


            h1 = df1.parse(hi);

            h2 = df1.parse(hf);
            
            calendar.setTime(h1); // Configuramos la fecha que se recibe

            calendar.set(Calendar.MINUTE, calendar.get(Calendar.MINUTE)- 5);

            hi=df1.format(calendar.getTime());
            
            calendar.setTime(h2); // Configuramos la fecha que se recibe

             calendar.set(Calendar.MINUTE, calendar.get(Calendar.MINUTE)+ 5);

             hf=df1.format(calendar.getTime()); 

             

             
             


            horafa = "(CONVERT(concat_ws(' ', fecha, hora),DATETIME) >= CONVERT('" + diai + " " + hi + "',DATETIME) and CONVERT(concat_ws(' ', fecha, hora),DATETIME) <= CONVERT('" + diaf + " " + hf + "',DATETIME)) ";





            condicion = "(fecha_inicial between  '" + diai + "' and '" + diaf + "' ) and (fecha_final between  '" + diai + "' and '" + diaf + "') and usuarios.nombre in" + usuarios + " and  horai in " + hora;
            condicionf = "(fecha between  '" + diai + "' and '" + diaf + "' )  and nombre in" + usuarios + " and  " + horafa + "";


            System.out.println(usuarios);
            System.out.println(condicion);
            System.out.println(condicionf);
            System.out.println(turnos.getModel().getRowCount());

            con.conectar();
            Map parameters = new HashMap();
            parameters.put("condicion1", condicion);
            //parameters.put("condicion2", condicion);
            // parameters.put("condicion3", condicion);
            parameters.put("condicionf", condicionf);
            parameters.put("usuario", "nombre in " + usuarios);
            parameters.put("condiciond", condicion);

            parameters.put("diai", diai);
            parameters.put("diaf", diaf);
            parameters.put("horai", hi);
            parameters.put("horaf", hf);



            JasperReport report = JasperCompileManager.compileReport("venta_combustible.jrxml");
            JasperPrint print = JasperFillManager.fillReport(report, parameters, con.coneccion);
            // Exporta el informe a PDF
            //JasperExportManager.exportReportToPdfFile(print, "venta_combu.pdf");
            //Para visualizar el pdf directamente desde java
            JasperViewer.viewReport(print, false);

        } catch (JRException ex) {
            Logger.getLogger(Reporte_diario.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Reporte_diario.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ParseException ex) {
            Logger.getLogger(Reporte_diario_consolidado.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Reporte_diario_consolidado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Reporte_diario_consolidado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Reporte_diario_consolidado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Reporte_diario_consolidado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new Reporte_diario_consolidado().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser diai;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable turnos;
    // End of variables declaration//GEN-END:variables
}
