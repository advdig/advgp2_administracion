/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package reportes;

import reportes.reporteturnos;
import conexion.conexion_facturacion;
import java.awt.Checkbox;
import java.awt.Component;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JCheckBox;

/**
 *
 * @author r
 */
public class reportes extends javax.swing.JFrame {

    String usu, contra;
    /**
     * Creates new form reportes
     */
    String fi, ff, hi, hf;
DefaultListModel modeloLista = new DefaultListModel();
DefaultListModel pro = new DefaultListModel();
    public reportes(String u, String c) {
        try {
            usu = u;
            contra = c;

            initComponents();
            mangueras.setModel(modeloLista);
           
            
            
            
            
            
            
            
            int cont = 0;
            conexion_facturacion con = new conexion_facturacion(usu, contra);

            con.conectar();


            Statement comadv = con.coneccion.createStatement();
            ResultSet ridcom = comadv.executeQuery("SELECT nombre FROM adv_facturacion.producto;");



            while (ridcom.next()) {

               

                     pro.addElement(ridcom.getString(1));

              
               



            }
            
            Statement man = con.coneccion.createStatement();
            ResultSet ridman = man.executeQuery("SELECT nmanguera FROM adv_facturacion.configuracion order by nmanguera;");



            while (ridman.next()) {
            
            modeloLista.addElement("Manguera #"+ridman.getInt(1));

            
            
            }
            
            
           


             
            
           
            
           

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(reportes.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(reportes.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private reportes() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        h1 = new javax.swing.JTextField();
        h2 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        mangueras = new javax.swing.JList();
        d1 = new com.toedter.calendar.JDateChooser();
        d2 = new com.toedter.calendar.JDateChooser();

        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(null);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Reporte de Despachos");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(188, 11, 155, 17);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Desde:");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(20, 70, 53, 17);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Hasta");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(20, 110, 53, 17);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("Fecha");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(112, 45, 50, 17);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("Hora");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(289, 45, 40, 17);

        h1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        h1.setText("00:00:00");
        jPanel1.add(h1);
        h1.setBounds(252, 66, 86, 28);

        h2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        h2.setText("00:00:00");
        jPanel1.add(h2);
        h2.setBounds(252, 101, 86, 28);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setText("Mangueras");
        jPanel1.add(jLabel6);
        jLabel6.setBounds(400, 40, 80, 17);

        jButton1.setText("Generar Reporte");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);
        jButton1.setBounds(300, 270, 140, 23);

        mangueras.setDropMode(javax.swing.DropMode.ON);
        jScrollPane1.setViewportView(mangueras);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(400, 60, 110, 173);
        jPanel1.add(d1);
        d1.setBounds(80, 70, 110, 20);
        jPanel1.add(d2);
        d2.setBounds(80, 110, 110, 20);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 681, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    public void usuarios(String usuario, String contraseña) {

        contra = contraseña;
        usu = usuario;

    }
    private void d1AncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_d1AncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_d1AncestorAdded

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        int mes = 0, mes1 = 0;
        mes = d1.getCalendar().get(Calendar.MONTH) + 1;
        if (d1.getCalendar().get(Calendar.DATE) <= 9 && d1.getCalendar().get(Calendar.MONTH) + 1 <= 9) {


            fi = d1.getCalendar().get(Calendar.YEAR) + "-0" + mes + "-0" + d1.getCalendar().get(Calendar.DATE);

        }

        if (d1.getCalendar().get(Calendar.DATE) <= 9 && d1.getCalendar().get(Calendar.MONTH) + 1 >= 9) {

            fi = d1.getCalendar().get(Calendar.YEAR) + "-" + mes + "-0" + d1.getCalendar().get(Calendar.DATE);

        }
        if (d1.getCalendar().get(Calendar.MONTH) + 1 <= 9 && d1.getCalendar().get(Calendar.DATE) >= 9) {

            fi = d1.getCalendar().get(Calendar.YEAR) + "-0" + mes + "-" + d1.getCalendar().get(Calendar.DATE);

        }


        mes1 = d2.getCalendar().get(Calendar.MONTH) + 1;
        if (d2.getCalendar().get(Calendar.DATE) <= 9 && d2.getCalendar().get(Calendar.MONTH) + 1 <= 9) {


            ff = d2.getCalendar().get(Calendar.YEAR) + "-0" + mes1 + "-0" + d2.getCalendar().get(Calendar.DATE);

        }

        if (d2.getCalendar().get(Calendar.DATE) <= 9 && d2.getCalendar().get(Calendar.MONTH) + 1 >= 9) {

            ff = d2.getCalendar().get(Calendar.YEAR) + "-" + mes1 + "-0" + d2.getCalendar().get(Calendar.DATE);

        }
        if (d2.getCalendar().get(Calendar.MONTH) + 1 <= 9 && d2.getCalendar().get(Calendar.DATE) >= 9) {

            ff = d2.getCalendar().get(Calendar.YEAR) + "-0" + mes1 + "-" + d2.getCalendar().get(Calendar.DATE);

        }

        String man,pro,hi,hf;
        Object [] prod=new Object[4];
        
        
        List n=mangueras.getSelectedValuesList();
         
        
        man=n.toString().replace("[","").replace("]","").replace("Manguera #","");
        hi="'"+h1.getText()+"'";
        hf="'"+h2.getText()+"'";
        
        fi="'"+fi+"'";
        ff="'"+ff+"'";
        
        
        System.out.println(man);
         System.out.println(hi);
         System.out.println(hf);
         
        System.out.println(fi);
        System.out.println(ff);
        try {
            reporteturnos re=new reporteturnos(usu,contra,man,hi,hf,fi,ff);
         
            
            
            
        } catch (SQLException ex) {
            Logger.getLogger(reportes.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(reportes.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
       
        
        
        
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(reportes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(reportes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(reportes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(reportes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new reportes().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser d1;
    private com.toedter.calendar.JDateChooser d2;
    private javax.swing.JTextField h1;
    private javax.swing.JTextField h2;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList mangueras;
    // End of variables declaration//GEN-END:variables
}
